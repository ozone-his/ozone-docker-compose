<project>
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.ozonehis</groupId>
  <artifactId>ozone-docker-compose</artifactId>
  <name>Ozone Docker Compose</name>
  <version>1.0.0-alpha.10</version>
  <packaging>pom</packaging>

  <organization>
    <name>Ozone HIS</name>
    <url>https://www.ozone-his.com</url>
  </organization>
  <developers>
    <developer>
      <name>Mekom Solutions</name>
      <url>https://www.mekomsolutions.com</url>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <ozoneDemoDataVersion>1.0.0-alpha.10</ozoneDemoDataVersion>
    <true>true</true>
  </properties>

  <modules>
    <module>demo</module>
  </modules>

  <dependencies>
    <dependency>
      <groupId>com.ozonehis</groupId>
      <artifactId>ozone-demo-data</artifactId>
      <type>zip</type>
      <version>${ozoneDemoDataVersion}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Package as a Zip file -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.6.0</version>
        <executions>
          <execution>
            <id>Package as a Zip file</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>assembly.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>Copy local resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}</directory>
                  <includes>
                    <include>proxy/</include>
                    <include>*docker-compose*</include>
                    <include>*env</include>
                    <include>scripts/</include>
                  </includes>
                  <excludes>
                    <exclude>scripts/distro/</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <!-- Copy and substitute some helper files (for demo and Gitpod) -->
            <id>Copy and substitute some helper files</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>
                ${project.build.directory}/</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.basedir}/scripts/</directory>
                  <includes>
                    <include>go-to-scripts-dir.sh</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>Copy Demo Data resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <excludeTransitive>true</excludeTransitive>
              <useBaseVersion>true</useBaseVersion>
              <outputDirectory>
                ${project.build.directory}/${project.artifactId}-${project.version}/demo</outputDirectory>
              <includeArtifactIds>ozone-demo-data</includeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <distributionManagement>
    <repository>
      <name>Mekom Solutions Nexus repo for releases</name>
      <id>mks-nexus-public-releases</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-releases</url>
    </repository>
    <snapshotRepository>
      <name>Mekom Solutions Nexus repo for snapshots</name>
      <id>mks-nexus-public-snapshots</id>
      <url>https://nexus.mekomsolutions.net/repository/maven-snapshots</url>
    </snapshotRepository>
  </distributionManagement>

</project>