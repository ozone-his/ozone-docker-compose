services:

  superset:
    depends_on:
      redis:
        condition: service_started
      postgresql:
        condition: service_started
      superset-init:
        condition: service_completed_successfully
    environment: &superset-env
      - DATABASE_HOST=${POSTGRES_DB_HOST}
      - DATABASE_DB=${SUPERSET_DB}
      - DATABASE_USER=${SUPERSET_DB_USER}
      - DATABASE_PASSWORD=${SUPERSET_DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - ADMIN_USERNAME=${SUPERSET_ADMIN_USERNAME}
      - ADMIN_PASSWORD=${SUPERSET_ADMIN_PASSWORD}
      - ANALYTICS_DB_PASSWORD=${ANALYTICS_DB_PASSWORD}
    image: &superset-image amancevice/superset:2.1.0
    labels:
      traefik.enable: "true"
      traefik.http.routers.superset.rule: "Host(`${SUPERSET_HOSTNAME}`)"
      traefik.http.routers.superset.entrypoints: "websecure"
      traefik.http.services.superset.loadbalancer.server.port: 8088
    networks:
      - ozone
      - web
    restart: unless-stopped
    volumes:
      - ${SUPERSET_CONFIG_PATH}/:/etc/superset/
    
  superset-worker:
    command: "celery worker --app=superset.tasks.celery_app:app"
    depends_on:
      redis:
        condition: service_started
      postgresql:
        condition: service_started
      superset-init:
        condition: service_completed_successfully
    environment: *superset-env
    image: *superset-image
    networks:
      - ozone
    restart: unless-stopped
    
    
  superset-init:
    command: "/etc/superset/superset-init.sh"
    depends_on:
      - postgresql
      - redis
    environment: *superset-env
    image: *superset-image
    networks:
      - ozone
    restart: on-failure
    volumes:
      - ${SUPERSET_CONFIG_PATH}/:/etc/superset/
    
  redis:
    image: redis:7
    restart: unless-stopped
    networks:
      - ozone
    volumes:
      - redis-data:/data
    
  postgresql:
    environment:
      # Analytics
      ANALYTICS_DB_NAME: ${ANALYTICS_DB_NAME}
      ANALYTICS_DB_USER: ${ANALYTICS_DB_USER}
      ANALYTICS_DB_PASSWORD: ${ANALYTICS_DB_PASSWORD}
      # Superset
      SUPERSET_DB: ${SUPERSET_DB}
      SUPERSET_DB_USER: ${SUPERSET_DB_USER}
      SUPERSET_DB_PASSWORD: ${SUPERSET_DB_PASSWORD}
    volumes:
      - "${SQL_SCRIPTS_PATH}/postgresql/analytics:/docker-entrypoint-initdb.d/db/analytics"
      - "${SQL_SCRIPTS_PATH}/postgresql/superset:/docker-entrypoint-initdb.d/db/superset"

  env-substitution:
    environment:
      - SUPERSET_PUBLIC_URL=https://${SUPERSET_HOSTNAME}

volumes:
  redis-data: ~
