networks:
  ozone:
  web:
    external: true

services:

  env-substitution:
    image: mekomsolutions/env-substitution:1e6fa02
    networks:
      - ozone
    restart: on-failure
    volumes:
       - "${DISTRO_PATH}:/opt/env-substitution/files"

  mysql:
    command: "mysqld --character-set-server=utf8 --collation-server=utf8_general_ci --log-bin --binlog-format=ROW  --server-id=2 --sync-binlog=1 --binlog-annotate-row-events=0"
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    healthcheck:
      test: "exit 0"
    image: mariadb:10.2
    networks:
      - ozone
    ports:
      - "3306:3306"
    restart: unless-stopped
    volumes:
      - "${MYSQL_DATADIR:-mysql-data}:/var/lib/mysql"
      - "${SQL_SCRIPTS_PATH}/mysql/create_db.sh:/docker-entrypoint-initdb.d/create_db.sh"

  postgresql:
    command: "postgres -c wal_level=logical -c max_wal_senders=10 -c max_replication_slots=10"
    image: postgres:13
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ozone
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - "${POSTGRES_DATADIR:-postgresql-data}:/var/lib/postgresql/data"
      - "${SQL_SCRIPTS_PATH}/postgresql/create_db.sh:/docker-entrypoint-initdb.d/create_db.sh"

version: "3.7"

volumes:
  mysql-data: ~
  postgresql-data: ~
